<?xml version="1.0"?>
<configuration>
	<configSections>
		<section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging"/>
		<section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"/>
		<section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
		<section name="cachingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Caching.Configuration.CacheManagerSettings, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.414.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true"/>
		<sectionGroup name="EpidemicPrevent">
			<section name="caching" requirePermission="false" type="EpidemicPrevent.Framework.Providers.ProviderConfigurationHandler, EpidemicPrevent"/>
			<section name="data" requirePermission="false" type="EpidemicPrevent.Framework.Providers.ProviderConfigurationHandler, EpidemicPrevent"/>
		</sectionGroup>
	</configSections>
	<appSettings>
		<add key="dependencyResolverTypeName" value="Jiuzh.Infrastructure.EnterpriseLibrary.UnityDependencyResolver, Jiuzh.Infrastructure.EnterpriseLibrary"/>
	</appSettings>
	<loggingConfiguration name="Jiuzh Logging" tracingEnabled="true" defaultCategory="General">
		<listeners>
			<add name="TextFileExceptionListener" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" fileName="D:\trace.log" formatter="TextFormatter" filter="Error"/>
		</listeners>
		<formatters>
			<add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging" template="Timestamp: {timestamp}{newline}&#xA;Message: {message}{newline}&#xA;Category: {category}{newline}&#xA;Priority: {priority}{newline}&#xA;EventId: {eventid}{newline}&#xA;Severity: {severity}{newline}&#xA;Title:{title}{newline}&#xA;Machine: {localMachine}{newline}&#xA;App Domain: {localAppDomain}{newline}&#xA;ProcessId: {localProcessId}{newline}&#xA;Process Name: {localProcessName}{newline}&#xA;Thread Name: {threadName}{newline}&#xA;Win32 ThreadId:{win32ThreadId}{newline}&#xA;Extended Properties: {dictionary({key} - {value}{newline})}" name="TextFormatter"/>
		</formatters>
		<categorySources>
			<add switchValue="All" name="Logging">
				<listeners>
					<add name="TextFileExceptionListener"/>
				</listeners>
			</add>
		</categorySources>
		<specialSources>
			<allEvents switchValue="All" name="All Events"/>
			<notProcessed switchValue="All" name="Unprocessed Category"/>
			<errors switchValue="All" name="Logging Errors &amp; Warnings">
				<listeners>
					<add name="TextFileExceptionListener"/>
				</listeners>
			</errors>
		</specialSources>
	</loggingConfiguration>
	<exceptionHandling>
		<exceptionPolicies>
			<add name="FBLLExceptionPolicy">
				<exceptionTypes>
					<add name="Logging" type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="NotifyRethrow">
						<exceptionHandlers>
							<add logCategory="Logging" type="Jiuzh.Infrastructure.EnterpriseLibrary.WeblogLoggingExceptionHandler,Jiuzh.Infrastructure.EnterpriseLibrary" name="WeblogExceptionHandler"/>
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
		</exceptionPolicies>
	</exceptionHandling>
	<cachingConfiguration defaultCacheManager="DefaultCacheManager">
		<cacheManagers>
			<add name="DefaultCacheManager" type="Microsoft.Practices.EnterpriseLibrary.Caching.CacheManager, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.414.0" expirationPollFrequencyInSeconds="60" maximumElementsInCacheBeforeScavenging="500" numberToRemoveWhenScavenging="10" backingStoreName="Null Storage"/>
		</cacheManagers>
		<backingStores>
			<add encryptionProviderName="" type="Microsoft.Practices.EnterpriseLibrary.Caching.BackingStoreImplementations.NullBackingStore, Microsoft.Practices.EnterpriseLibrary.Caching, Version=5.0.414.0" name="Null Storage"/>
		</backingStores>
	</cachingConfiguration>
	<connectionStrings>
		<add name="CatEntitiesCon" connectionString="Data Source=192.168.8.100\DB_XXF;Initial Catalog=Cat;User ID=sa;Password=2663028" providerName="System.Data.SqlClient"/>
	</connectionStrings>
	<unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
		<sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration"/>
		<!--namespace-->
		<namespace name="Jiuzh.CoreBase.Infrastructure"/>
		<namespace name="Jiuzh.Infrastructure.EnterpriseLibrary"/>
		<namespace name="Microsoft.Practices.Unity.InterceptionExtension"/>
		<namespace name="Cat.Produce.Infrastructure"/>
		<!-- assembly-->
		<assembly name="Jiuzh.CoreBase"/>
		<assembly name="Jiuzh.Infrastructure.EnterpriseLibrary"/>
		<assembly name="Microsoft.Practices.Unity.Interception"/>
		<assembly name="Cat.Produce.Core"/>
		<container>
			<extension type="Interception"/>
			<register type="ILog" mapTo="Weblog">
				<constructor>
					<param name="traceCategory" type="System.String" value="Logging"/>
					<param name="logger" type="ILogger" dependencyType="ILogger"/>
					<param name="exceptionPolicyName" type="System.String" value="FBLLExceptionPolicy"/>
					<param name="exceptionPolicy" type="IExceptionPolicy" dependencyType="IExceptionPolicy"/>
					<param name="frameToSkip" type="System.Int32" value="4"/>
				</constructor>
			</register>
			<register type="IExceptionPolicy" mapTo="ExceptionPolicyWrapper">
				<lifetime type="singleton"/>
			</register>
			<register name="RegisterUCF" type="IBootstrapperTask" mapTo="ProduceRegisterUCF">
			</register>
			<register type="ILogger" mapTo="LoggerWrapper">
				<lifetime type="singleton"/>
			</register>
		</container>
	</unity>
	<system.web>
		<!-- 
            设置 compilation debug="true" 可将调试符号插入
            已编译的页面中。但由于这会 
            影响性能，因此只在开发过程中将此值 
            设置为 true。
        -->
		<customErrors mode="Off"></customErrors>
		<compilation debug="true" targetFramework="4.0">
			<assemblies>
				<add assembly="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/></assemblies></compilation>
		<!--
            通过 <authentication> 节可以配置 ASP.NET 用来 
            识别进入用户的
            安全身份验证模式。 
        -->
		<authentication mode="Windows"/>
		<!--
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节可以配置相应的处理步骤。具体说来，
            开发人员通过该节可以配置
            要显示的 html 错误页
            以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
			<controls>
				<add tagPrefix="xxf" namespace="Xxf.Web.UI.Control" assembly="Xxf.Web.UI.Control"/>
				<add tagPrefix="xxf" src="~/Pages/Control/PageBreak.ascx" tagName="PageBreak"/>
				<add tagPrefix="xxf" src="~/Pages/Control/BaseButton.ascx" tagName="BaseButton"/>
			</controls>
		</pages>
		<httpModules>
			<remove name="RoleManager"/>
    </httpModules>
    <httpHandlers >
      <add verb="*" path="*.jza" type="Xxf.Web.UI.UserControlAjaxHandler,Xxf.Web.UI" />
    </httpHandlers>
	</system.web>
	<!-- 
        在 Internet 信息服务 7.0 下运行 ASP.NET AJAX 需要 system.webServer
        节。对早期版本的 IIS 来说则不需要此节。
    -->
</configuration>

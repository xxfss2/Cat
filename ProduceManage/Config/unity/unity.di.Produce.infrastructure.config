<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension
		  type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />

    <!--namespace-->
    <namespace name="Jiuzh.CoreBase"/>
    <namespace name="Jiuzh.Infrastructure"/>
    <namespace name="Jiuzh.CoreBase.Infrastructure"/>
    <namespace name="Jiuzh.Infrastructure.EnterpriseLibrary"/>
    <namespace name="Microsoft.Practices.Unity.InterceptionExtension"/>
    <namespace name ="Cat.Produce.Core.DomainObjects"/>
    <namespace name ="Cat.Produce.EF.DomainObjects"/>
    <namespace name ="Cat.Produce.EF"/>
    <namespace name ="Cat.Produce.EF.Service"/>
    <namespace name ="Cat.Produce.EF.Repository"/>
    <namespace name ="Cat.Produce.Core.Service"/>
    <namespace name ="Cat.Produce.Core.Repository"/>
    <namespace name ="Cat.Produce.Core.Cache"/>
    <namespace name ="Cat.Produce.EF.Cache"/>
    <namespace name ="Jiuzh.CoreBase.ICache"/>

    <!-- assembly-->
    <assembly name="Cat.Produce.Core"/>
    <assembly name="Cat.Produce.EF"/>
    <assembly name="Jiuzh.CoreBase"/>
    <assembly name="Jiuzh.EFBase"/>
    <assembly name="Jiuzh.Infrastructure.EnterpriseLibrary"/>
    <assembly name="Microsoft.Practices.Unity.Interception"/>
    
    <!-- alias -->
    <alias alias="PerWebRequest" type="Jiuzh.Infrastructure.EnterpriseLibrary.UnityPerWebRequestLifetimeManager,Jiuzh.Infrastructure.EnterpriseLibrary"/>

    <container>
      <extension type="Interception" />
      
      <register type="IConfigurationManager" mapTo="ConfigurationManagerWrapper">
        <lifetime type="singleton"/>
      </register>

      <register  type="IDomainObjectFactory" mapTo="DomainObjectFactory">
        <lifetime type="singleton"/>
      </register>

      <register type="IConnectionString" mapTo="ConnectionString">
        <lifetime type="singleton"/>
        <constructor>
          <param name="configuration" dependencyType="IConfigurationManager" />
          <param name="name" type="System.String" value="CatEntitiesCon" />
        </constructor>
      </register>
      
      <register type="IDatabaseFactory" mapTo="DatabaseFactory">
        <lifetime type="PerWebRequest"/>
        <constructor>
          <param name="connectionString"  dependencyType="IConnectionString" />
        </constructor>
      </register>

      <register name="cat" type="IUnitOfWork" mapTo="UnitOfWork">
          <constructor>
            <param name="factory"  dependencyType="IDatabaseFactory" />
          </constructor>
      </register>

      <!--<register  type="IBacterType" mapTo="BacterType">
        <lifetime type="singleton"/>
      </register>

      <register  type="IBacterCache" mapTo="BacterCache">
        <lifetime type="PerWebRequest"/>Transient : 每次请求创建一个新实例
      </register>-->

 

      <!--BeginRepository-->
      <register type ="IAddressListRepository" mapTo ="AddressListRepository">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="factory" dependencyType ="IDatabaseFactory" />
        </constructor>
      </register>
      
      <register type ="IClientInfoRepository" mapTo ="ClientInfoRepository">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="factory" dependencyType ="IDatabaseFactory" />
        </constructor>
      </register>

      <register type ="IDeliverysRepository" mapTo ="DeliverysRepository">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="factory" dependencyType ="IDatabaseFactory" />
        </constructor>
      </register>

      <register type ="IProduceInfoRepository" mapTo ="ProduceInfoRepository">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="factory" dependencyType ="IDatabaseFactory" />
        </constructor>
      </register>

      <register type ="IProductRepository" mapTo ="ProductRepository">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="factory" dependencyType ="IDatabaseFactory" />
        </constructor>
      </register>
      
      <register type ="IUserRepository" mapTo ="UserRepository">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="factory" dependencyType ="IDatabaseFactory" />
        </constructor>
      </register>

      <register type ="IProScheduleRepository" mapTo ="ProScheduleRepository">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="factory" dependencyType ="IDatabaseFactory" />
        </constructor>
      </register>
      
      <register type ="IProduce_ProductRepository" mapTo ="Produce_ProductRepository">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="factory" dependencyType ="IDatabaseFactory" />
        </constructor>
      </register>

      <register type ="IFactoryRepository" mapTo ="FactoryRepository">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="factory" dependencyType ="IDatabaseFactory" />
        </constructor>
      </register>

      <register type ="IMoneyRepository" mapTo ="MoneyRepository">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="factory" dependencyType ="IDatabaseFactory" />
        </constructor>
      </register>

      <register type="IContactRepository" mapTo="ContactRepository">
        <lifetime type="PerWebRequest" />
        <constructor>
          <param name="factory" dependencyType="IDatabaseFactory" />
        </constructor>
      </register>
      <!--BeginService-->

      <register type="IContactService" mapTo="ContactService">
        <constructor>
          <param name="bar" dependencyType="IContactRepository" />
          <param name="factory" dependencyType="IDomainObjectFactory" />
        </constructor>
      </register>
      
      <register type ="IAddressListService" mapTo ="AddressListService">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="bar" dependencyType ="IAddressListRepository" />
          <param name="factory" dependencyType="IDomainObjectFactory"/>
        </constructor>
      </register>

      <register type ="IClientInfoService" mapTo ="ClientInfoService">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="bar" dependencyType ="IClientInfoRepository" />
          <param name="factory" dependencyType="IDomainObjectFactory"/>
        </constructor>
      </register>

      <register type ="IDeliverysService" mapTo ="DeliverysService">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="bar" dependencyType ="IDeliverysRepository" />
          <param name="factory" dependencyType="IDomainObjectFactory"/>
        </constructor>
      </register>

      <register type ="IProduceInfoService" mapTo ="ProduceInfoService">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="bar" dependencyType ="IProduceInfoRepository" />
          <param name="factory" dependencyType="IDomainObjectFactory"/>
        </constructor>
      </register>

      <register type ="IProductService" mapTo ="ProductService">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="bar" dependencyType ="IProductRepository" />
          <param name="factory" dependencyType="IDomainObjectFactory"/>
        </constructor>
      </register>

      <register type ="IUserService" mapTo ="UserService">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="bar" dependencyType ="IUserRepository" />
          <param name="factory" dependencyType="IDomainObjectFactory"/>
        </constructor>
      </register>
      
      <register type ="IProScheduleService" mapTo ="ProScheduleService">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="bar" dependencyType ="IProScheduleRepository" />
          <param name="factory" dependencyType="IDomainObjectFactory"/>
        </constructor>
      </register>
      
       <register type ="IProduce_ProductService" mapTo ="Produce_ProductService">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="bar" dependencyType ="IProduce_ProductRepository" />
          <param name="factory" dependencyType="IDomainObjectFactory"/>
        </constructor>
      </register>
      
      <register type ="IFactoryService" mapTo ="FactoryService">
        <lifetime type ="PerWebRequest"/>
        <constructor >
          <param name ="bar" dependencyType ="IFactoryRepository" />
          <param name="factory" dependencyType="IDomainObjectFactory"/>
        </constructor>
      </register>
    </container>
  </unity>
</configuration>
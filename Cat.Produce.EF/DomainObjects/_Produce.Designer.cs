//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("CatModel", "FK_T_ProduceInfo_T_ClientInfo", "ClientInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cat.Produce.EF.DomainObjects.ClientInfo), "T_Produce", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cat.Produce.EF.DomainObjects.Produce))]
[assembly: EdmRelationshipAttribute("CatModel", "FK_T_Produce_Product_T_Produce", "Produce", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cat.Produce.EF.DomainObjects.Produce), "T_Produce_Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cat.Produce.EF.DomainObjects.Produce_Product))]
[assembly: EdmRelationshipAttribute("CatModel", "FK_T_Produce_Product_T_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cat.Produce.EF.DomainObjects.Product), "T_Produce_Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cat.Produce.EF.DomainObjects.Produce_Product))]
[assembly: EdmRelationshipAttribute("CatModel", "FK_T_Contact_T_ClientInfo", "ClientInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cat.Produce.EF.DomainObjects.ClientInfo), "T_Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cat.Produce.EF.DomainObjects.Contact))]
[assembly: EdmRelationshipAttribute("CatModel", "FK_T_Produce_Product_T_Factory1", "Factory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cat.Produce.EF.DomainObjects.Factory), "Produce_Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cat.Produce.EF.DomainObjects.Produce_Product))]
[assembly: EdmRelationshipAttribute("CatModel", "FK_T_Delivery_T_Produce_Product1", "Produce_Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cat.Produce.EF.DomainObjects.Produce_Product), "Deliverys", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cat.Produce.EF.DomainObjects.Deliverys))]
[assembly: EdmRelationshipAttribute("CatModel", "FK_T_ProSchedule_T_Produce_Product", "Produce_Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cat.Produce.EF.DomainObjects.Produce_Product), "ProSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cat.Produce.EF.DomainObjects.ProSchedule))]
[assembly: EdmRelationshipAttribute("CatModel", "FK_T_Contact_T_Factory", "Factory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Cat.Produce.EF.DomainObjects.Factory), "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cat.Produce.EF.DomainObjects.Contact))]

#endregion

namespace Cat.Produce.EF.DomainObjects
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class CatEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“CatEntities”部分中的连接字符串初始化新 CatEntities 对象。
        /// </summary>
        public CatEntities() : base("name=CatEntities", "CatEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 CatEntities 对象。
        /// </summary>
        public CatEntities(string connectionString) : base(connectionString, "CatEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 CatEntities 对象。
        /// </summary>
        public CatEntities(EntityConnection connection) : base(connection, "CatEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<AddressList> AddressLists
        {
            get
            {
                if ((_AddressLists == null))
                {
                    _AddressLists = base.CreateObjectSet<AddressList>("AddressLists");
                }
                return _AddressLists;
            }
        }
        private ObjectSet<AddressList> _AddressLists;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ClientInfo> ClientInfos
        {
            get
            {
                if ((_ClientInfos == null))
                {
                    _ClientInfos = base.CreateObjectSet<ClientInfo>("ClientInfos");
                }
                return _ClientInfos;
            }
        }
        private ObjectSet<ClientInfo> _ClientInfos;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Deliverys> Deliveryss
        {
            get
            {
                if ((_Deliveryss == null))
                {
                    _Deliveryss = base.CreateObjectSet<Deliverys>("Deliveryss");
                }
                return _Deliveryss;
            }
        }
        private ObjectSet<Deliverys> _Deliveryss;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Produce> Produces
        {
            get
            {
                if ((_Produces == null))
                {
                    _Produces = base.CreateObjectSet<Produce>("Produces");
                }
                return _Produces;
            }
        }
        private ObjectSet<Produce> _Produces;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<ProSchedule> ProSchedules
        {
            get
            {
                if ((_ProSchedules == null))
                {
                    _ProSchedules = base.CreateObjectSet<ProSchedule>("ProSchedules");
                }
                return _ProSchedules;
            }
        }
        private ObjectSet<ProSchedule> _ProSchedules;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Produce_Product> Produce_Products
        {
            get
            {
                if ((_Produce_Products == null))
                {
                    _Produce_Products = base.CreateObjectSet<Produce_Product>("Produce_Products");
                }
                return _Produce_Products;
            }
        }
        private ObjectSet<Produce_Product> _Produce_Products;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Factory> Factorys
        {
            get
            {
                if ((_Factorys == null))
                {
                    _Factorys = base.CreateObjectSet<Factory>("Factorys");
                }
                return _Factorys;
            }
        }
        private ObjectSet<Factory> _Factorys;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Money> Moneys
        {
            get
            {
                if ((_Moneys == null))
                {
                    _Moneys = base.CreateObjectSet<Money>("Moneys");
                }
                return _Moneys;
            }
        }
        private ObjectSet<Money> _Moneys;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 AddressLists EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToAddressLists(AddressList addressList)
        {
            base.AddObject("AddressLists", addressList);
        }
    
        /// <summary>
        /// 用于向 ClientInfos EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToClientInfos(ClientInfo clientInfo)
        {
            base.AddObject("ClientInfos", clientInfo);
        }
    
        /// <summary>
        /// 用于向 Deliveryss EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToDeliveryss(Deliverys deliverys)
        {
            base.AddObject("Deliveryss", deliverys);
        }
    
        /// <summary>
        /// 用于向 Products EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// 用于向 Users EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// 用于向 Produces EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToProduces(Produce produce)
        {
            base.AddObject("Produces", produce);
        }
    
        /// <summary>
        /// 用于向 ProSchedules EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToProSchedules(ProSchedule proSchedule)
        {
            base.AddObject("ProSchedules", proSchedule);
        }
    
        /// <summary>
        /// 用于向 Produce_Products EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToProduce_Products(Produce_Product produce_Product)
        {
            base.AddObject("Produce_Products", produce_Product);
        }
    
        /// <summary>
        /// 用于向 Factorys EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFactorys(Factory factory)
        {
            base.AddObject("Factorys", factory);
        }
    
        /// <summary>
        /// 用于向 Moneys EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMoneys(Money money)
        {
            base.AddObject("Moneys", money);
        }
    
        /// <summary>
        /// 用于向 Contacts EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CatModel", Name="AddressList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AddressList : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 AddressList 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        public static AddressList CreateAddressList(global::System.Int32 id)
        {
            AddressList addressList = new AddressList();
            addressList.Id = id;
            return addressList;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CatModel", Name="ClientInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ClientInfo 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="createdAt">CreatedAt 属性的初始值。</param>
        /// <param name="modifiedAt">ModifiedAt 属性的初始值。</param>
        /// <param name="number">Number 属性的初始值。</param>
        public static ClientInfo CreateClientInfo(global::System.Int32 id, global::System.String name, global::System.Int32 userId, global::System.DateTime createdAt, global::System.DateTime modifiedAt, global::System.String number)
        {
            ClientInfo clientInfo = new ClientInfo();
            clientInfo.Id = id;
            clientInfo.Name = name;
            clientInfo.UserId = userId;
            clientInfo.CreatedAt = createdAt;
            clientInfo.ModifiedAt = modifiedAt;
            clientInfo.Number = number;
            return clientInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedAt
        {
            get
            {
                return _ModifiedAt;
            }
            set
            {
                OnModifiedAtChanging(value);
                ReportPropertyChanging("ModifiedAt");
                _ModifiedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedAt");
                OnModifiedAtChanged();
            }
        }
        private global::System.DateTime _ModifiedAt;
        partial void OnModifiedAtChanging(global::System.DateTime value);
        partial void OnModifiedAtChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Contact
        {
            get
            {
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private global::System.String _Contact;
        partial void OnContactChanging(global::System.String value);
        partial void OnContactChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mail
        {
            get
            {
                return _Mail;
            }
            set
            {
                OnMailChanging(value);
                ReportPropertyChanging("Mail");
                _Mail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mail");
                OnMailChanged();
            }
        }
        private global::System.String _Mail;
        partial void OnMailChanging(global::System.String value);
        partial void OnMailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Site
        {
            get
            {
                return _Site;
            }
            set
            {
                OnSiteChanging(value);
                ReportPropertyChanging("Site");
                _Site = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Site");
                OnSiteChanged();
            }
        }
        private global::System.String _Site;
        partial void OnSiteChanging(global::System.String value);
        partial void OnSiteChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_ProduceInfo_T_ClientInfo", "T_Produce")]
        public EntityCollection<Produce> ToProduce
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Produce>("CatModel.FK_T_ProduceInfo_T_ClientInfo", "T_Produce");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Produce>("CatModel.FK_T_ProduceInfo_T_ClientInfo", "T_Produce", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_Contact_T_ClientInfo", "T_Contact")]
        public EntityCollection<Contact> ToContact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("CatModel.FK_T_Contact_T_ClientInfo", "T_Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("CatModel.FK_T_Contact_T_ClientInfo", "T_Contact", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CatModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Contact 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Contact CreateContact(global::System.Int32 id, global::System.String name)
        {
            Contact contact = new Contact();
            contact.Id = id;
            contact.Name = name;
            return contact;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MailAddress
        {
            get
            {
                return _MailAddress;
            }
            set
            {
                OnMailAddressChanging(value);
                ReportPropertyChanging("MailAddress");
                _MailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MailAddress");
                OnMailAddressChanged();
            }
        }
        private global::System.String _MailAddress;
        partial void OnMailAddressChanging(global::System.String value);
        partial void OnMailAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_Contact_T_ClientInfo", "ClientInfo")]
        public ClientInfo ToClientInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientInfo>("CatModel.FK_T_Contact_T_ClientInfo", "ClientInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientInfo>("CatModel.FK_T_Contact_T_ClientInfo", "ClientInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientInfo> ToClientInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientInfo>("CatModel.FK_T_Contact_T_ClientInfo", "ClientInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientInfo>("CatModel.FK_T_Contact_T_ClientInfo", "ClientInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_Contact_T_Factory", "Factory")]
        public Factory ToFactory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Factory>("CatModel.FK_T_Contact_T_Factory", "Factory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Factory>("CatModel.FK_T_Contact_T_Factory", "Factory").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Factory> ToFactoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Factory>("CatModel.FK_T_Contact_T_Factory", "Factory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Factory>("CatModel.FK_T_Contact_T_Factory", "Factory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CatModel", Name="Deliverys")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Deliverys : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Deliverys 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="dDate">DDate 属性的初始值。</param>
        /// <param name="type">Type 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="createdAt">CreatedAt 属性的初始值。</param>
        /// <param name="modifiedAt">ModifiedAt 属性的初始值。</param>
        /// <param name="amount">Amount 属性的初始值。</param>
        public static Deliverys CreateDeliverys(global::System.Int32 id, global::System.DateTime dDate, global::System.Int32 type, global::System.Int32 userId, global::System.DateTime createdAt, global::System.DateTime modifiedAt, global::System.Int32 amount)
        {
            Deliverys deliverys = new Deliverys();
            deliverys.Id = id;
            deliverys.DDate = dDate;
            deliverys.Type = type;
            deliverys.UserId = userId;
            deliverys.CreatedAt = createdAt;
            deliverys.ModifiedAt = modifiedAt;
            deliverys.Amount = amount;
            return deliverys;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DDate
        {
            get
            {
                return _DDate;
            }
            set
            {
                OnDDateChanging(value);
                ReportPropertyChanging("DDate");
                _DDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DDate");
                OnDDateChanged();
            }
        }
        private global::System.DateTime _DDate;
        partial void OnDDateChanging(global::System.DateTime value);
        partial void OnDDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedAt
        {
            get
            {
                return _ModifiedAt;
            }
            set
            {
                OnModifiedAtChanging(value);
                ReportPropertyChanging("ModifiedAt");
                _ModifiedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedAt");
                OnModifiedAtChanged();
            }
        }
        private global::System.DateTime _ModifiedAt;
        partial void OnModifiedAtChanging(global::System.DateTime value);
        partial void OnModifiedAtChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// 发票
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Invoice
        {
            get
            {
                return _Invoice;
            }
            set
            {
                OnInvoiceChanging(value);
                ReportPropertyChanging("Invoice");
                _Invoice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Invoice");
                OnInvoiceChanged();
            }
        }
        private global::System.String _Invoice;
        partial void OnInvoiceChanging(global::System.String value);
        partial void OnInvoiceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HScode
        {
            get
            {
                return _HScode;
            }
            set
            {
                OnHScodeChanging(value);
                ReportPropertyChanging("HScode");
                _HScode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HScode");
                OnHScodeChanged();
            }
        }
        private global::System.String _HScode;
        partial void OnHScodeChanging(global::System.String value);
        partial void OnHScodeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_Delivery_T_Produce_Product1", "Produce_Product")]
        public Produce_Product ToProduce_Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Produce_Product>("CatModel.FK_T_Delivery_T_Produce_Product1", "Produce_Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Produce_Product>("CatModel.FK_T_Delivery_T_Produce_Product1", "Produce_Product").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Produce_Product> ToProduce_ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Produce_Product>("CatModel.FK_T_Delivery_T_Produce_Product1", "Produce_Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Produce_Product>("CatModel.FK_T_Delivery_T_Produce_Product1", "Produce_Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CatModel", Name="Factory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Factory : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Factory 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        public static Factory CreateFactory(global::System.Int32 id, global::System.String name)
        {
            Factory factory = new Factory();
            factory.Id = id;
            factory.Name = name;
            return factory;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Contact
        {
            get
            {
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private global::System.String _Contact;
        partial void OnContactChanging(global::System.String value);
        partial void OnContactChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone2
        {
            get
            {
                return _Phone2;
            }
            set
            {
                OnPhone2Changing(value);
                ReportPropertyChanging("Phone2");
                _Phone2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone2");
                OnPhone2Changed();
            }
        }
        private global::System.String _Phone2;
        partial void OnPhone2Changing(global::System.String value);
        partial void OnPhone2Changed();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_Produce_Product_T_Factory1", "Produce_Product")]
        public EntityCollection<Produce_Product> ToProduce_Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Produce_Product>("CatModel.FK_T_Produce_Product_T_Factory1", "Produce_Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Produce_Product>("CatModel.FK_T_Produce_Product_T_Factory1", "Produce_Product", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_Contact_T_Factory", "Contact")]
        public EntityCollection<Contact> ToContact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contact>("CatModel.FK_T_Contact_T_Factory", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contact>("CatModel.FK_T_Contact_T_Factory", "Contact", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CatModel", Name="Money")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Money : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Money 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="proportion">Proportion 属性的初始值。</param>
        /// <param name="mark">Mark 属性的初始值。</param>
        /// <param name="shortName">ShortName 属性的初始值。</param>
        public static Money CreateMoney(global::System.Int32 id, global::System.String name, global::System.Decimal proportion, global::System.String mark, global::System.String shortName)
        {
            Money money = new Money();
            money.Id = id;
            money.Name = name;
            money.Proportion = proportion;
            money.Mark = mark;
            money.ShortName = shortName;
            return money;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// 货币换算比例
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Proportion
        {
            get
            {
                return _Proportion;
            }
            set
            {
                OnProportionChanging(value);
                ReportPropertyChanging("Proportion");
                _Proportion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Proportion");
                OnProportionChanged();
            }
        }
        private global::System.Decimal _Proportion;
        partial void OnProportionChanging(global::System.Decimal value);
        partial void OnProportionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mark
        {
            get
            {
                return _Mark;
            }
            set
            {
                OnMarkChanging(value);
                ReportPropertyChanging("Mark");
                _Mark = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mark");
                OnMarkChanged();
            }
        }
        private global::System.String _Mark;
        partial void OnMarkChanging(global::System.String value);
        partial void OnMarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CatModel", Name="Produce")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Produce : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Produce 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="createdAt">CreatedAt 属性的初始值。</param>
        /// <param name="modifiedAt">ModifiedAt 属性的初始值。</param>
        /// <param name="isEnd">IsEnd 属性的初始值。</param>
        /// <param name="number">Number 属性的初始值。</param>
        public static Produce CreateProduce(global::System.Int32 id, global::System.Int32 userId, global::System.DateTime createdAt, global::System.DateTime modifiedAt, global::System.Boolean isEnd, global::System.String number)
        {
            Produce produce = new Produce();
            produce.Id = id;
            produce.UserId = userId;
            produce.CreatedAt = createdAt;
            produce.ModifiedAt = modifiedAt;
            produce.IsEnd = isEnd;
            produce.Number = number;
            return produce;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedAt
        {
            get
            {
                return _ModifiedAt;
            }
            set
            {
                OnModifiedAtChanging(value);
                ReportPropertyChanging("ModifiedAt");
                _ModifiedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedAt");
                OnModifiedAtChanged();
            }
        }
        private global::System.DateTime _ModifiedAt;
        partial void OnModifiedAtChanging(global::System.DateTime value);
        partial void OnModifiedAtChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnd
        {
            get
            {
                return _IsEnd;
            }
            set
            {
                OnIsEndChanging(value);
                ReportPropertyChanging("IsEnd");
                _IsEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnd");
                OnIsEndChanged();
            }
        }
        private global::System.Boolean _IsEnd;
        partial void OnIsEndChanging(global::System.Boolean value);
        partial void OnIsEndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_ProduceInfo_T_ClientInfo", "ClientInfo")]
        public ClientInfo ToClientInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientInfo>("CatModel.FK_T_ProduceInfo_T_ClientInfo", "ClientInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientInfo>("CatModel.FK_T_ProduceInfo_T_ClientInfo", "ClientInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientInfo> ToClientInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientInfo>("CatModel.FK_T_ProduceInfo_T_ClientInfo", "ClientInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientInfo>("CatModel.FK_T_ProduceInfo_T_ClientInfo", "ClientInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_Produce_Product_T_Produce", "T_Produce_Product")]
        public EntityCollection<Produce_Product> ToProduce_Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Produce_Product>("CatModel.FK_T_Produce_Product_T_Produce", "T_Produce_Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Produce_Product>("CatModel.FK_T_Produce_Product_T_Produce", "T_Produce_Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CatModel", Name="Produce_Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Produce_Product : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Produce_Product 对象。
        /// </summary>
        /// <param name="amount">Amount 属性的初始值。</param>
        /// <param name="remainAmount">RemainAmount 属性的初始值。</param>
        /// <param name="orderDate">OrderDate 属性的初始值。</param>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="isEnd">IsEnd 属性的初始值。</param>
        /// <param name="modelPrice">ModelPrice 属性的初始值。</param>
        /// <param name="exchangeRate">ExchangeRate 属性的初始值。</param>
        public static Produce_Product CreateProduce_Product(global::System.Int32 amount, global::System.Int32 remainAmount, global::System.DateTime orderDate, global::System.Int32 id, global::System.Boolean isEnd, global::System.Decimal modelPrice, global::System.Decimal exchangeRate)
        {
            Produce_Product produce_Product = new Produce_Product();
            produce_Product.Amount = amount;
            produce_Product.RemainAmount = remainAmount;
            produce_Product.OrderDate = orderDate;
            produce_Product.Id = id;
            produce_Product.IsEnd = isEnd;
            produce_Product.ModelPrice = modelPrice;
            produce_Product.ExchangeRate = exchangeRate;
            return produce_Product;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Int32 _Amount;
        partial void OnAmountChanging(global::System.Int32 value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RemainAmount
        {
            get
            {
                return _RemainAmount;
            }
            set
            {
                OnRemainAmountChanging(value);
                ReportPropertyChanging("RemainAmount");
                _RemainAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RemainAmount");
                OnRemainAmountChanged();
            }
        }
        private global::System.Int32 _RemainAmount;
        partial void OnRemainAmountChanging(global::System.Int32 value);
        partial void OnRemainAmountChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Material
        {
            get
            {
                return _Material;
            }
            set
            {
                OnMaterialChanging(value);
                ReportPropertyChanging("Material");
                _Material = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Material");
                OnMaterialChanged();
            }
        }
        private global::System.String _Material;
        partial void OnMaterialChanging(global::System.String value);
        partial void OnMaterialChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DrawingId
        {
            get
            {
                return _DrawingId;
            }
            set
            {
                OnDrawingIdChanging(value);
                ReportPropertyChanging("DrawingId");
                _DrawingId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DrawingId");
                OnDrawingIdChanged();
            }
        }
        private global::System.String _DrawingId;
        partial void OnDrawingIdChanging(global::System.String value);
        partial void OnDrawingIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OrderDate
        {
            get
            {
                return _OrderDate;
            }
            set
            {
                OnOrderDateChanging(value);
                ReportPropertyChanging("OrderDate");
                _OrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderDate");
                OnOrderDateChanged();
            }
        }
        private global::System.DateTime _OrderDate;
        partial void OnOrderDateChanging(global::System.DateTime value);
        partial void OnOrderDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FactoryOrderDate
        {
            get
            {
                return _FactoryOrderDate;
            }
            set
            {
                OnFactoryOrderDateChanging(value);
                ReportPropertyChanging("FactoryOrderDate");
                _FactoryOrderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FactoryOrderDate");
                OnFactoryOrderDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FactoryOrderDate;
        partial void OnFactoryOrderDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFactoryOrderDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ClientPrice
        {
            get
            {
                return _ClientPrice;
            }
            set
            {
                OnClientPriceChanging(value);
                ReportPropertyChanging("ClientPrice");
                _ClientPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientPrice");
                OnClientPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _ClientPrice;
        partial void OnClientPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnClientPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FactoryPrice
        {
            get
            {
                return _FactoryPrice;
            }
            set
            {
                OnFactoryPriceChanging(value);
                ReportPropertyChanging("FactoryPrice");
                _FactoryPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FactoryPrice");
                OnFactoryPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _FactoryPrice;
        partial void OnFactoryPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnFactoryPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClientPriceMoney
        {
            get
            {
                return _ClientPriceMoney;
            }
            set
            {
                OnClientPriceMoneyChanging(value);
                ReportPropertyChanging("ClientPriceMoney");
                _ClientPriceMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientPriceMoney");
                OnClientPriceMoneyChanged();
            }
        }
        private Nullable<global::System.Int32> _ClientPriceMoney;
        partial void OnClientPriceMoneyChanging(Nullable<global::System.Int32> value);
        partial void OnClientPriceMoneyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEnd
        {
            get
            {
                return _IsEnd;
            }
            set
            {
                OnIsEndChanging(value);
                ReportPropertyChanging("IsEnd");
                _IsEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnd");
                OnIsEndChanged();
            }
        }
        private global::System.Boolean _IsEnd;
        partial void OnIsEndChanging(global::System.Boolean value);
        partial void OnIsEndChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DelivDateCust
        {
            get
            {
                return _DelivDateCust;
            }
            set
            {
                OnDelivDateCustChanging(value);
                ReportPropertyChanging("DelivDateCust");
                _DelivDateCust = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DelivDateCust");
                OnDelivDateCustChanged();
            }
        }
        private Nullable<global::System.DateTime> _DelivDateCust;
        partial void OnDelivDateCustChanging(Nullable<global::System.DateTime> value);
        partial void OnDelivDateCustChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DelivDateFact
        {
            get
            {
                return _DelivDateFact;
            }
            set
            {
                OnDelivDateFactChanging(value);
                ReportPropertyChanging("DelivDateFact");
                _DelivDateFact = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DelivDateFact");
                OnDelivDateFactChanged();
            }
        }
        private Nullable<global::System.DateTime> _DelivDateFact;
        partial void OnDelivDateFactChanging(Nullable<global::System.DateTime> value);
        partial void OnDelivDateFactChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Qualityer
        {
            get
            {
                return _Qualityer;
            }
            set
            {
                OnQualityerChanging(value);
                ReportPropertyChanging("Qualityer");
                _Qualityer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Qualityer");
                OnQualityerChanged();
            }
        }
        private global::System.String _Qualityer;
        partial void OnQualityerChanging(global::System.String value);
        partial void OnQualityerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ModelPrice
        {
            get
            {
                return _ModelPrice;
            }
            set
            {
                OnModelPriceChanging(value);
                ReportPropertyChanging("ModelPrice");
                _ModelPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModelPrice");
                OnModelPriceChanged();
            }
        }
        private global::System.Decimal _ModelPrice;
        partial void OnModelPriceChanging(global::System.Decimal value);
        partial void OnModelPriceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ExchangeRate
        {
            get
            {
                return _ExchangeRate;
            }
            set
            {
                OnExchangeRateChanging(value);
                ReportPropertyChanging("ExchangeRate");
                _ExchangeRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeRate");
                OnExchangeRateChanged();
            }
        }
        private global::System.Decimal _ExchangeRate;
        partial void OnExchangeRateChanging(global::System.Decimal value);
        partial void OnExchangeRateChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_Produce_Product_T_Produce", "Produce")]
        public Produce ToProduce
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Produce>("CatModel.FK_T_Produce_Product_T_Produce", "Produce").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Produce>("CatModel.FK_T_Produce_Product_T_Produce", "Produce").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Produce> ToProduceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Produce>("CatModel.FK_T_Produce_Product_T_Produce", "Produce");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Produce>("CatModel.FK_T_Produce_Product_T_Produce", "Produce", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_Produce_Product_T_Product", "Product")]
        public Product ToProduct
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CatModel.FK_T_Produce_Product_T_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CatModel.FK_T_Produce_Product_T_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ToProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("CatModel.FK_T_Produce_Product_T_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("CatModel.FK_T_Produce_Product_T_Product", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_Produce_Product_T_Factory1", "Factory")]
        public Factory ToFactory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Factory>("CatModel.FK_T_Produce_Product_T_Factory1", "Factory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Factory>("CatModel.FK_T_Produce_Product_T_Factory1", "Factory").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Factory> ToFactoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Factory>("CatModel.FK_T_Produce_Product_T_Factory1", "Factory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Factory>("CatModel.FK_T_Produce_Product_T_Factory1", "Factory", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_Delivery_T_Produce_Product1", "Deliverys")]
        public EntityCollection<Deliverys> ToDelivery
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deliverys>("CatModel.FK_T_Delivery_T_Produce_Product1", "Deliverys");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deliverys>("CatModel.FK_T_Delivery_T_Produce_Product1", "Deliverys", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_ProSchedule_T_Produce_Product", "ProSchedule")]
        public EntityCollection<ProSchedule> ToProSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProSchedule>("CatModel.FK_T_ProSchedule_T_Produce_Product", "ProSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProSchedule>("CatModel.FK_T_ProSchedule_T_Produce_Product", "ProSchedule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CatModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Product 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="createdAt">CreatedAt 属性的初始值。</param>
        /// <param name="modifiedAt">ModifiedAt 属性的初始值。</param>
        /// <param name="number">Number 属性的初始值。</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String name, global::System.Int32 userId, global::System.DateTime createdAt, global::System.DateTime modifiedAt, global::System.String number)
        {
            Product product = new Product();
            product.Id = id;
            product.Name = name;
            product.UserId = userId;
            product.CreatedAt = createdAt;
            product.ModifiedAt = modifiedAt;
            product.Number = number;
            return product;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedAt
        {
            get
            {
                return _ModifiedAt;
            }
            set
            {
                OnModifiedAtChanging(value);
                ReportPropertyChanging("ModifiedAt");
                _ModifiedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedAt");
                OnModifiedAtChanged();
            }
        }
        private global::System.DateTime _ModifiedAt;
        partial void OnModifiedAtChanging(global::System.DateTime value);
        partial void OnModifiedAtChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Process
        {
            get
            {
                return _Process;
            }
            set
            {
                OnProcessChanging(value);
                ReportPropertyChanging("Process");
                _Process = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Process");
                OnProcessChanged();
            }
        }
        private global::System.String _Process;
        partial void OnProcessChanging(global::System.String value);
        partial void OnProcessChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_Produce_Product_T_Product", "T_Produce_Product")]
        public EntityCollection<Produce_Product> ToProduce_Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Produce_Product>("CatModel.FK_T_Produce_Product_T_Product", "T_Produce_Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Produce_Product>("CatModel.FK_T_Produce_Product_T_Product", "T_Produce_Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CatModel", Name="ProSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProSchedule : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 ProSchedule 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="date">Date 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="createdAt">CreatedAt 属性的初始值。</param>
        /// <param name="modifiedAt">ModifiedAt 属性的初始值。</param>
        public static ProSchedule CreateProSchedule(global::System.Int32 id, global::System.DateTime date, global::System.Int32 userId, global::System.DateTime createdAt, global::System.DateTime modifiedAt)
        {
            ProSchedule proSchedule = new ProSchedule();
            proSchedule.Id = id;
            proSchedule.Date = date;
            proSchedule.UserId = userId;
            proSchedule.CreatedAt = createdAt;
            proSchedule.ModifiedAt = modifiedAt;
            return proSchedule;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedAt
        {
            get
            {
                return _ModifiedAt;
            }
            set
            {
                OnModifiedAtChanging(value);
                ReportPropertyChanging("ModifiedAt");
                _ModifiedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedAt");
                OnModifiedAtChanged();
            }
        }
        private global::System.DateTime _ModifiedAt;
        partial void OnModifiedAtChanging(global::System.DateTime value);
        partial void OnModifiedAtChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CatModel", "FK_T_ProSchedule_T_Produce_Product", "Produce_Product")]
        public Produce_Product ToProduce_Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Produce_Product>("CatModel.FK_T_ProSchedule_T_Produce_Product", "Produce_Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Produce_Product>("CatModel.FK_T_ProSchedule_T_Produce_Product", "Produce_Product").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Produce_Product> ToProduce_ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Produce_Product>("CatModel.FK_T_ProSchedule_T_Produce_Product", "Produce_Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Produce_Product>("CatModel.FK_T_ProSchedule_T_Produce_Product", "Produce_Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CatModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="id">Id 属性的初始值。</param>
        /// <param name="name">Name 属性的初始值。</param>
        /// <param name="loginName">LoginName 属性的初始值。</param>
        /// <param name="passWord">PassWord 属性的初始值。</param>
        public static User CreateUser(global::System.Int32 id, global::System.String name, global::System.String loginName, global::System.String passWord)
        {
            User user = new User();
            user.Id = id;
            user.Name = name;
            user.LoginName = loginName;
            user.PassWord = passWord;
            return user;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginName
        {
            get
            {
                return _LoginName;
            }
            set
            {
                OnLoginNameChanging(value);
                ReportPropertyChanging("LoginName");
                _LoginName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginName");
                OnLoginNameChanged();
            }
        }
        private global::System.String _LoginName;
        partial void OnLoginNameChanging(global::System.String value);
        partial void OnLoginNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassWord
        {
            get
            {
                return _PassWord;
            }
            set
            {
                OnPassWordChanging(value);
                ReportPropertyChanging("PassWord");
                _PassWord = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassWord");
                OnPassWordChanged();
            }
        }
        private global::System.String _PassWord;
        partial void OnPassWordChanging(global::System.String value);
        partial void OnPassWordChanged();

        #endregion
    
    }

    #endregion
    
}
